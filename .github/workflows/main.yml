name: Build and Deploy to EC2 via Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2️⃣ JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3️⃣ Gradle 실행 권한 부여
      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      # 4️⃣ Gradle 빌드
      - name: Build with Gradle
        run: |
          ./gradlew clean build
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydb
          SPRING_DATASOURCE_USERNAME: kss
          SPRING_DATASOURCE_PASSWORD: root

      # 5️⃣ 빌드된 JAR 파일명 가져오기 (plain 제외)
      - name: Get JAR filename
        id: get_jar
        run: |
          JAR_NAME=$(ls build/libs/gaia-*.jar | grep -v plain | head -n 1)
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV

      # 6️⃣ Docker Hub 로그인 (Personal Access Token 사용)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # 7️⃣ Docker 이미지 빌드 및 태깅
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gaia-app:latest .

      # 8️⃣ Docker Hub에 푸시
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/gaia-app:latest

      # 9️⃣ EC2에 Docker Compose 파일 전송
      - name: Upload Docker Compose file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/docker-compose.yml"

      # 🔟 EC2에서 기존 컨테이너 중지 및 새 컨테이너 실행
      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 기존 컨테이너 종료
            docker stop gaia-app || true
            docker rm gaia-app || true
            docker stop gaia-db || true
            docker rm gaia-db || true

            # 최신 이미지 가져오기
            docker pull ${{ secrets.DOCKER_USERNAME }}/gaia-app:latest

            # Docker Compose 실행
            docker-compose -f /home/ubuntu/docker-compose.yml up -d
