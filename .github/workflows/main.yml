name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: mydb
          POSTGRES_USER: kss
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U kss -d mydb"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1) 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2) 자바 환경 세팅 (JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3) Gradle 실행 권한 부여
      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      # 4) Gradle 빌드 (테스트 포함)
      - name: Build with Gradle
        run: |
          ./gradlew clean build
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydb
          SPRING_DATASOURCE_USERNAME: kss
          SPRING_DATASOURCE_PASSWORD: root

      # 5) JAR 파일을 EC2로 복사 (SCP 사용)
      - name: Upload JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/"

      # 6) EC2에서 JAR 실행 (기존 프로세스 종료 후 새로 실행)
      - name: SSH to EC2 and Run Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export JAR_PATH="/home/ubuntu/myapp.jar"
            PID=$(pgrep -f "$JAR_PATH")

            # 기존 애플리케이션 종료 (안전하게 종료)
            if [ -n "$PID" ]; then
              echo "Stopping existing application..."
              kill -15 "$PID"
              sleep 5
              if ps -p "$PID" > /dev/null; then
                echo "Force killing application..."
                kill -9 "$PID"
              fi
            else
              echo "No existing application found. Skipping termination."
            fi

            # JAR 파일 실행
            if [ -f "$JAR_PATH" ]; then
              echo "Starting new application..."
              nohup java -jar "$JAR_PATH" > /home/ubuntu/app.log 2>&1 &
              sleep 5

              # 실행 확인
              NEW_PID=$(pgrep -f "$JAR_PATH")
              if [ -n "$NEW_PID" ]; then
                echo "Application started successfully!"
              else
                echo "Application failed to start!"
                exit 1
              fi
            else
              echo "JAR file not found! Deployment failed."
              exit 1
            fi